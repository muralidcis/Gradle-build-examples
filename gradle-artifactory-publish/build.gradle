apply plugin: 'java'
apply plugin: 'maven'

// import jsonslurper..... to get json data
import groovy.json.JsonSlurper
def MODULE_BUILD_RULES_FILE = "publish-artifactory-rules.json"

def inputFile = new File(MODULE_BUILD_RULES_FILE)
Object result = new JsonSlurper().parseText(inputFile.text)
def fileLocation
def moduleName
def fileHolder
def moduleType
def depModuleName

uploadArchives  {
  String taskName =project.gradle.startParameter.taskNames
  moduleType =(taskName=='[uploadLibraries]')?'jar':'war'
  println 'upload modules for '+moduleType
  repositories {
    mavenDeployer {
      repository(url: "$archivaUrl") {
        authentication(userName: "$userName", password: "$passWord")
      }

      result[moduleType].each {
        id,data -> moduleName = id

        // To run war or jar !
        fileHolder = file("build/"+moduleName+"."+moduleType)

        // Add the dependancy
        dependencies {
          if(data.dependancy !=null) {
            data.dependancy.each {
              depId,depData -> depModuleName = depId
              compile group: depData.groupId, name: depData.artifactId, version: depData.version
              runtime group: depData.groupId, name: depData.artifactId, version: depData.version
            }
          }
        }

        artifacts {
          archives(fileHolder) {
            name moduleName
            type moduleType
          }

          addFilter(moduleName) {artifact, file ->
            artifact.name == moduleName
          }
          pom(moduleName).version =data.version
          pom(moduleName).groupId =data.groupId
          pom(moduleName).artifactId =data.artifactId

        }
      }
    }
  }
}

task uploadLibraries  {
  doFirst{
    tasks.uploadArchives.execute()
  }
}

task uploadWars  {
  doFirst{
    tasks.uploadArchives.execute()
  }
}
